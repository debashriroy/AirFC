Test Loss: 0.701 | Accuracy: 81.130
Train Epoch:  97 [     0/ 60000 (  0%)]	Loss: 0.463604
Train Epoch:  97 [  6400/ 60000 ( 11%)]	Loss: 1.038135
Train Epoch:  97 [ 12800/ 60000 ( 21%)]	Loss: 0.939044
Train Epoch:  97 [ 19200/ 60000 ( 32%)]	Loss: 1.608362
Train Epoch:  97 [ 25600/ 60000 ( 43%)]	Loss: 0.407383
Train Epoch:  97 [ 32000/ 60000 ( 53%)]	Loss: 0.442597
Train Epoch:  97 [ 38400/ 60000 ( 64%)]	Loss: 0.276634
Train Epoch:  97 [ 44800/ 60000 ( 75%)]	Loss: 0.625417
Train Epoch:  97 [ 51200/ 60000 ( 85%)]	Loss: 0.746283
Train Epoch:  97 [ 57600/ 60000 ( 96%)]	Loss: 0.523773
Test Loss: 0.754 | Accuracy: 82.370
Train Epoch:  98 [     0/ 60000 (  0%)]	Loss: 0.442711
Train Epoch:  98 [  6400/ 60000 ( 11%)]	Loss: 0.782528
Train Epoch:  98 [ 12800/ 60000 ( 21%)]	Loss: 1.090213
Train Epoch:  98 [ 19200/ 60000 ( 32%)]	Loss: 0.595941
Train Epoch:  98 [ 25600/ 60000 ( 43%)]	Loss: 0.577796
Train Epoch:  98 [ 32000/ 60000 ( 53%)]	Loss: 0.949580
Train Epoch:  98 [ 38400/ 60000 ( 64%)]	Loss: 0.318052
Train Epoch:  98 [ 44800/ 60000 ( 75%)]	Loss: 0.530977
Train Epoch:  98 [ 51200/ 60000 ( 85%)]	Loss: 0.703159
Train Epoch:  98 [ 57600/ 60000 ( 96%)]	Loss: 1.267625
Test Loss: 0.639 | Accuracy: 82.360
Train Epoch:  99 [     0/ 60000 (  0%)]	Loss: 0.782291
Train Epoch:  99 [  6400/ 60000 ( 11%)]	Loss: 0.421383
Train Epoch:  99 [ 12800/ 60000 ( 21%)]	Loss: 0.738532
Train Epoch:  99 [ 19200/ 60000 ( 32%)]	Loss: 0.582675
Train Epoch:  99 [ 25600/ 60000 ( 43%)]	Loss: 0.887949
Train Epoch:  99 [ 32000/ 60000 ( 53%)]	Loss: 0.362343
Train Epoch:  99 [ 38400/ 60000 ( 64%)]	Loss: 0.486472
Train Epoch:  99 [ 44800/ 60000 ( 75%)]	Loss: 0.359686
Train Epoch:  99 [ 51200/ 60000 ( 85%)]	Loss: 1.122122
Train Epoch:  99 [ 57600/ 60000 ( 96%)]	Loss: 0.671494
Test Loss: 0.714 | Accuracy: 83.740
Final MODEL: 
ComplexNet(
  (fc1): ComplexLinearNoise(
    (fc_r): LinearNoise(in_features=784, out_features=32, bias=False)
    (fc_i): LinearNoise(in_features=784, out_features=32, bias=False)
  )
  (out): ComplexLinearNoise(
    (fc_r): LinearNoise(in_features=32, out_features=10, bias=False)
    (fc_i): LinearNoise(in_features=32, out_features=10, bias=False)
  )
)
Model's state_dict:
fc1.fc_r.weight 	 torch.Size([32, 784])
fc1.fc_i.weight 	 torch.Size([32, 784])
out.fc_r.weight 	 torch.Size([10, 32])
out.fc_i.weight 	 torch.Size([10, 32])
__header__ ()
__version__ ()
__globals__ (0,)
fc1.fc_r.weight (32, 784)
fc1.fc_i.weight (32, 784)
out.fc_r.weight (10, 32)
out.fc_i.weight (10, 32)
Model Keys are:  dict_keys(['__header__', '__version__', '__globals__', 'fc1.fc_r.weight', 'fc1.fc_i.weight', 'out.fc_r.weight', 'out.fc_i.weight'])
Model's state_dict:
__header__ ()
__version__ ()
__globals__ (0,)
input_x (100, 16, 784)
hidden_x (100, 16, 32)
out_x (100, 16, 10)
Input Keys are:  dict_keys(['__header__', '__version__', '__globals__', 'input_x', 'hidden_x', 'out_x'])